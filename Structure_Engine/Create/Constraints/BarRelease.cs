/*
 * This file is part of the Buildings and Habitats object Model (BHoM)
 * Copyright (c) 2015 - 2020, the respective contributors. All rights reserved.
 *
 * Each contributor holds copyright over their respective contributions.
 * The project versioning (Git) records all such contribution source information.
 *                                           
 *                                                                              
 * The BHoM is free software: you can redistribute it and/or modify         
 * it under the terms of the GNU Lesser General Public License as published by  
 * the Free Software Foundation, either version 3.0 of the License, or          
 * (at your option) any later version.                                          
 *                                                                              
 * The BHoM is distributed in the hope that it will be useful,              
 * but WITHOUT ANY WARRANTY; without even the implied warranty of               
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                 
 * GNU Lesser General Public License for more details.                          
 *                                                                            
 * You should have received a copy of the GNU Lesser General Public License     
 * along with this code. If not, see <https://www.gnu.org/licenses/lgpl-3.0.html>.      
 */

using BH.oM.Structure.Constraints;
using BH.oM.Reflection.Attributes;
using BH.oM.Quantities.Attributes;
using System.ComponentModel;

namespace BH.Engine.Structure
{
    public static partial class Create
    {
        /***************************************************/
        /**** Public Methods                            ****/
        /***************************************************/

        [Description("Creates a Bar release that is fully fixed in both ends, i.e. all degrees of freedom, translational and rotational will be fixed.")]
        [Input("name", "Name of the BarRelease. Defaults to FixFix.")]
        [Output("release", "The created fully fixed BarRelease.")]
        public static BarRelease BarReleaseFixFix( string name = "FixFix")
        {
            return new BarRelease { StartRelease = FixConstraint6DOF(), EndRelease = FixConstraint6DOF(), Name = name };
        }

        /***************************************************/

        [Description("Creates a Bar release that is pinned in both ends, i.e. all translational degrees of freedom will be fixed, and rotational released, with one exception. The RX release on the start will be fixed to avoid instability of the Bar, to prevent it from spinning around its own axis.")]
        [Input("name", "Name of the BarRelease. Defaults to PinPin.")]
        [Output("release", "The created pinned BarRelease.")]
        public static BarRelease BarReleasePinPin(string name = "PinPin")
        {
            Constraint6DOF endRelease = PinConstraint6DOF();
            endRelease.RotationX = DOFType.Fixed;

            return new BarRelease
            {
                StartRelease = PinConstraint6DOF(),
                EndRelease = endRelease,
                Name = name
            };
        }

        /***************************************************/

        [Description("Creates a Bar release that is pinned in one end and axially releaased in the other. \n" +
                     "This means that the start node will have all tranlational degrees fixed as well as the RX, to avoid instability, i.e. to prevent the Bar from spinning around its own axis. \n" +
                     "The end node will have the translational y and z directions fixed, all other free, i.e. it will be free to rotate as well as tranlate along the axis of the Bar.")]
        [Input("name", "Name of the BarRelease. Defaults to PinSlip.")]
        [Output("release", "The created pin-slip BarRelease.")]
        public static BarRelease BarReleasePinSlip(string name = "PinSlip")
        {
            Constraint6DOF startRelease = PinConstraint6DOF();
            startRelease.RotationX = DOFType.Fixed;

            return new BarRelease
            {
                StartRelease = startRelease,
                EndRelease = Constraint6DOF(false, true, true, false, false, false, "Slip"),
                Name = name
            };
        }

        /***************************************************/
        /**** Public Methods - Deprecated               ****/
        /***************************************************/

        [Deprecated("3.1", "Replaced by Autogenerated property assignment method")]
        public static BarRelease BarRelease(Constraint6DOF startConstraint, Constraint6DOF endConstraint, string name = "")
        {
            return new BarRelease { StartRelease = startConstraint, EndRelease = endConstraint, Name = name };
        }

        /***************************************************/
    }
}

